generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  password  String
  role      UserRole  @default(USER)
  image     String?
  comments  Comment[]
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum UserRole {
  USER
  ADMIN
}

model Post {
  id               Int       @id @default(autoincrement())
  slug             String    @unique
  title            String
  seoTitle         String
  description      String
  seoDescription   String
  content          String // html
  image            String
  imageAlt         String
  imageAttribution String? // html
  published        Boolean   @default(false)
  keywords         String[]
  comments         Comment[]
  likes            Like[]
  category         Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId       Int?
  isFeatured       Boolean   @default(false)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Comment {
  id              Int       @id @default(autoincrement())
  content         String
  post            Post      @relation(fields: [postId], references: [id])
  postId          Int
  author          User      @relation(fields: [authorId], references: [id])
  authorId        Int
  parentComment   Comment?  @relation("CommentToComment", fields: [parentCommentId], references: [id])
  parentCommentId Int?
  replies         Comment[] @relation("CommentToComment")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Like {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  slug  String @unique
  posts Post[]
}

model NewsletterSubscription {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  subscribed Boolean  @default(true)
  createdAt  DateTime @default(now())
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model Idea {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())
}
